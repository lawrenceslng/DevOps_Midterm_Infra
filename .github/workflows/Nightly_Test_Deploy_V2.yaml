name: Nightly Build Deployment V2

on:
  # Configuring this to not run every night and consume minutes
  # schedule:
  #   - cron: "0 8 * * *"  # Runs every day at 12 AM Pacific time
  workflow_dispatch:  # Allows manual trigger

jobs:
  build-and-test:
    name: Build and Test in EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Infrastructure Repository
        uses: actions/checkout@v4
        with:
          path: infra

      - name: Checkout Source Repository
        uses: actions/checkout@v4
        with:
          repository: lawrenceslng/DevOps_Midterm_SPA
          path: app-repo

      - name: Set up Node
        uses: actions/setup-node@v4
        with: 
          node-version: 20
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_ACCOUNT_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Create Temp EC2 for Verification
        run: |
          INSTANCE_ID=$(aws ec2 run-instances \
            --image-id ami-0d2cec4407f209198 \
            --instance-type t2.micro \
            --subnet-id subnet-06ad5d704458ea4d2 \
            --security-group-ids sg-0432f9c58280ae894 \
            --associate-public-ip-address \
            --query 'Instances[0].InstanceId' --output text)
          echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV
          sleep 15 # Wait for EC2 to be ready

      - name: Build the Nightly build
        run: |
          cd app-repo/client && npm ci && npm run build

      - name: Wait for EC2 instance to be ready
        run: |
          aws ec2 wait instance-running --instance-ids $INSTANCE_ID
          PUBLIC_IP=$(aws ec2 describe-instances \
            --instance-ids $INSTANCE_ID \
            --query 'Reservations[0].Instances[0].PublicIpAddress' \
            --output text)
          echo "PUBLIC_IP=$PUBLIC_IP" >> $GITHUB_ENV

      - name: Make scripts executable
        run: |
          chmod +x infra/scripts/setup_temp_ec2.sh
          chmod +x infra/scripts/local_smoke_test_V2.sh
          chmod +x infra/scripts/copy_to_temp_ec2_V2.sh
          chmod +x infra/scripts/build_and_push_V2.sh

      - name: Copy files to EC2
        env:
          PUBLIC_IP: ${{ env.PUBLIC_IP }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_ACCOUNT_REGION: ${{ secrets.AWS_ACCOUNT_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          EC2_SSH_PRIVATE_KEY: ${{ secrets.SSH_KEY }}
          GITHUB_PAT: ${{ secrets.MY_GITHUB_PAT }}
          DB_HOST: ${{ secrets.TEMP_DB_HOST }}
          DB_NAME: ${{ secrets.TEMP_DB_NAME }}
          DB_PASSWORD: ${{ secrets.TEMP_DB_PASSWORD }}
          DB_USER: ${{ secrets.TEMP_DB_USER }}
          INSTANCE_ID: ${{ env.INSTANCE_ID }}
        run: ./infra/scripts/copy_to_temp_ec2_V2.sh

      - name: Set DateTime Tag
        run: |
          echo "TAG=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

      - name: Run Build and Push Script
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_REGION: ${{ secrets.AWS_ACCOUNT_REGION }}
          TAG: ${{ env.TAG }}
        run: |
          echo "Running build and push script"
          ./infra/scripts/build_and_push_V2.sh app-repo

      - name: Setup EC2
        run: |
          echo "${{ secrets.SSH_KEY }}" | base64 --decode > key.pem
          chmod 600 key.pem
          ssh -i key.pem -o StrictHostKeyChecking=no ec2-user@$PUBLIC_IP '
            nohup /home/ec2-user/setup_temp_ec2.sh && /home/ec2-user/local_smoke_test_V2.sh > setup.log 2>&1 & exit'